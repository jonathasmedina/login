@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;600;700&display=swap');

*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Montserrat', sans-serif;
}

body{
    background-color: #c9d6ff;
    background: linear-gradient(to right, #e2e2e2, #c9d6ff);
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    height: 100vh;
}

.container{
    background-color: #fff;
    border-radius: 30px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.35);
    position: relative; /* necessário pois o form-container é absolute */
    overflow: hidden; /*para o form-container não aparecer fora do container */
    width: 768px; 
    max-width: 100%; /*para o container não ultrapassar a largura da tela */
    min-height: 480px; /*para o container não ficar muito pequeno */
}

.container p{
    font-size: 14px;
    line-height: 20px; /*espaçamento entre as linhas */
    letter-spacing: 0.3px; /*espaçamento entre as letras */
    margin: 20px 0;
}

.container span{
    font-size: 12px;
}

.container a{
    color: #333;
    font-size: 13px;
    text-decoration: none; /*para tirar o sublinhado do link */
    margin: 15px 0 10px; /* margem em cima, embaixo e nas laterais */
}

.container button{
    background-color: #512da8;
    color: #fff;
    font-size: 12px;
    padding: 10px 45px; /* primeiro vaor: em cima e embaixo, segundo valor: nas laterais */
    border: 1px solid transparent; /* para tirar a borda do botão. Na tela azul: branca (cor do container) */
    border-radius: 8px;
    font-weight: 600; /* para deixar o texto em negrito. 600 = semi-bold */
    letter-spacing: 0.5px;
    text-transform: uppercase; /* para deixar o texto em maiúsculo */
    margin-top: 10px;
    cursor: pointer;
}

.container button.hidden{ /*para esconder o botão */
    background-color: transparent; /* fica azul, cor do bg */
    border-color: #fff; /* cor da borda */
}

.container form{ /* dois forms - sign-in e sign-up */
    background-color: #fff;
    display: flex; /* cada um dos dois forms é um flex container */
    align-items: center; /* como flex-direction é column, o align-items é horizontal */
    justify-content: center; /* como flex-direction é column, o justify-content é vertical (eixo principal) */
    flex-direction: column; /* para os elementos ficarem um embaixo do outro. troca eixo principal e eixo transversal */
    padding: 0 40px; /* dois valores: em cima e embaixo, nas laterais */
    height: 100%; /* para o form ocupar toda a altura do container */
}

.container input{
    background-color: #eee;
    border: none; /* para tirar a borda do input */
    margin: 8px; /* 8px nas verticiais, 0 nas horizontais. 0 não precisa de unidade */
    padding: 10px 15px;
    font-size: 13px;
    border-radius: 8px;
    width: 100%;
    outline: none; /* para tirar a borda azul que aparece ao clicar no input */
}

.form-container{ /* as duas divs para os dois forms */
    position: absolute;
    top: 0;
    height: 100%;
    transition: all 0.6s ease-in-out; /* para fazer a transição entre os dois forms */
    /* a linha acima garante que a transição seja suave */
    /* transition opera com propriedades que podem ser animadas */
}

.sign-in{ /* parte branca, div com form de login/entrar */
    left: 0; /* esta div está na classe form-container, que é absolute. por isso é possível usar left */
    width: 50%;
    z-index: 2; /* para o form de login ficar em cima do form de cadastro */
}

    /* quando a classe painelAtivo é adicionada ao container (clique),  */
    /* o form de login é movido para a direita (distância = 100% de seu tamanho). sign-in = entrar */
.container.painelAtivo .sign-in{ 
    transform: translateX(100%);
}

.sign-up{ /* parte "branca", div form de cadastro/criar. */
    left: 0; /* esta div está na classe form-container, que é absolute. por isso é possível usar left */
    width: 50%;
    opacity: 0; /* para o form de cadastro ficar escondido. 0 = completamente transparente */
    z-index: 1; /* para o form de cadastro ficar atrás do form de login */
}

/* quando a classe painelAtivo é adicionada ao container (clique), */
/* o form de cadastro é movido para a direita (distância = 100% de seu tamanho) . sign-up = criar */
.container.painelAtivo .sign-up{ 
    transform: translateX(100%);
    opacity: 1; /* para o form de cadastro ficar visível. 1 = completamente opaco */
    z-index: 5; /* alterna a ordem de sobreposição dos elementos */
    animation: move 0.6s; /* para fazer a transição entre os dois forms */
    /* move é o nome da animação, 0.6s é a duração da animação */
}

/* animação para fazer a transição entre os dois forms */
/* 0% e 49.99% = form de login */
/* 50% e 100% = form de cadastro */
/* z-index: 1 = form de login atrás */
/* z-index: 5 = form de cadastro na frente */
/* opacity: 0 = form de login transparente */
/* opacity: 1 = form de cadastro opaco */
/*@keyframes faz a animação */
@keyframes move{
    0%, 49.99%{
        opacity: 0;
        z-index: 1;
    }
    50%, 100%{
        opacity: 1;
        z-index: 5;
    }
}

.social-icons{
    margin: 20px 0;
}

.social-icons a{
    border: 1px solid #ccc;
    border-radius: 20%;
    display: inline-flex; /* para os ícones ficarem um ao lado do outro. */
    justify-content: center;
    align-items: center;
    margin: 0 3px; /* nenhuma vertical, 3px horizontal */
    width: 40px;
    height: 40px;
}

.toggle-container{ /* div parte roxa */
    position: absolute; /* elemento pai é o "container" com position: relative, então absolute dentro do pai */
    top: 0;
    left: 50%;
    width: 50%;
    height: 100%;
    overflow: hidden; /* para o toggle não aparecer fora do container */
    transition: all 0.6s ease-in-out;
    border-radius: 150px 0 0 100px; /* para o toggle ficar arredondado */
    z-index: 1000;  /* para o toggle ficar em cima de tudo */
}

/* animação da parte roxa: deslocar para a esquerda */
.container.painelAtivo .toggle-container{
    transform: translateX(-100%);
    border-radius: 0 150px 100px 0; /* inverte as bordas */
}

/* propriedades de posicionamento do panel toggle */
.toggle{
    background-color: #512da8;
    background: linear-gradient(to right, #5c6bc0, #512da8);
    color: #fff;
    position: relative;
    left: -100%;
    height: 100%;
    width: 200%;
    transform: translateX(0); /* para o toggle ficar na posição inicial, voltar pra ela depois */
    transition: all 0.6s ease-in-out;
}

.container.painelAtivo .toggle{
    transform: translateX(50%);
}

/* propriedade de alinhamento dos itens do toggle panel */
.toggle-panel{
    position: absolute;
    width: 50%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    padding: 0 30px;
    text-align: center;
    top: 0; /*filho do toggle, que tem position: relative, fica absolute no pai */
    transform: translateX(0);
    transition: all 0.6s ease-in-out;
}

/* alterna os posicionamentos a partir da classe painelAtivo */
.toggle-left{
    transform: translateX(-200%);
}

/* alterna os posicionamentos a partir da classe painelAtivo */
.container.painelAtivo .toggle-left{
    transform: translateX(0);
}

/* alterna os posicionamentos a partir da classe painelAtivo */
.toggle-right{
    right: 0;
    transform: translateX(0);
}

/* alterna os posicionamentos a partir da classe painelAtivo */
.container.painelAtivo .toggle-right{
    transform: translateX(200%);
}